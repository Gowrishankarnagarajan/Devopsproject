name: Terraform Provision & Deploy

on:
  push:
    branches: [main]

permissions:
  contents: read
  id-token: write

jobs:
  provision-infra:
    name: Provision ACR Infrastructure
    runs-on: ubuntu-latest

    outputs:
      acr_login_server: ${{ steps.acr_output.outputs.acr_login_server }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform -chdir=terraform/infra init

      - name: Terraform Apply Infra
        run: terraform -chdir=terraform/infra apply -auto-approve

      - name: Get ACR Login Server
        id: acr_output
        run: |
          set -euxo pipefail
          ACR_NAME=$(terraform -chdir=terraform/infra output -raw acr_login_server)
          {
            echo "acr_login_server<<EOF"
            echo "$ACR_NAME"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Debug ACR Login Server
        run: echo "::notice::ACR is ${{ steps.acr_output.outputs.acr_login_server }}"

  push-image:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: provision-infra

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Docker Build & Push
        run: |
          set -euxo pipefail
          ACR="${{ needs.provision-infra.outputs.acr_login_server }}"
          # Extract ACR name (without domain)
          ACR_NAME=$(echo "$ACR" | cut -d. -f1)
          az acr login --name "$ACR_NAME"
          docker build -t "$ACR/ingestion:latest" ./sourcecode/ingestion
          docker push "$ACR/ingestion:latest"

  deploy-apps:
    name: Deploy Container App
    runs-on: ubuntu-latest
    needs: push-image

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init & Apply
        run: |
          set -euxo pipefail
          terraform -chdir=terraform/apps init
          terraform -chdir=terraform/apps apply -auto-approve -var="acr_login_server=${{ needs.provision-infra.outputs.acr_login_server }}"
